name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: fastapi
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1️⃣ Checkout code
      - uses: actions/checkout@v3

      # 2️⃣ Load .env.ci variables
      - name: Load environment variables
        run: |
          echo "Loading environment variables from .github/workflows/.env.ci"
          set -a
          source .github/workflows/.env.ci
          set +a

      # 3️⃣ Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 4️⃣ Cache dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 5️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install aiosqlite

      # 6️⃣ Run tests
      - name: Run tests
        run: pytest -v

      # 7️⃣ Build Docker image
      - name: Build Docker image
        run: docker build -t myapp:latest .

      # 8️⃣ Run Docker container
      - name: Run Docker container
        run: |
          docker run -d -p 8000:8000 --name myapp --env-file .github/workflows/.env.ci myapp:latest
          sleep 10
          docker ps -a
          docker logs myapp

      # 9️⃣ Healthcheck
      - name: Healthcheck
        run: |
          for i in {1..12}; do
            if curl -s http://localhost:8000/docs; then
              echo "✅ App is up!"
              exit 0
            fi
            echo "⏳ Waiting for app..."
            sleep 5
          done
          echo "❌ App failed to start"
          docker logs myapp
          exit 1
